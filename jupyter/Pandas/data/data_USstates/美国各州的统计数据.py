#  Copyright (c) 2022. Generated by Gu.
# 数据科学3.8.6案例
import pandas as pd

pop = pd.read_csv('state-population.csv')
areas = pd.read_csv('state-areas.csv')
abbrevs = pd.read_csv('state-abbrevs.csv')

merged = pd.merge(pop, abbrevs, how='outer', left_on='state/region', right_on='abbreviation')
merged = merged.drop('abbreviation', axis=1)  # 删除重复信息
merged.head()

# 检查数据缺失
merged.isnull().any()

# 数据缺失
merged[merged['population'].isnull()].head()
merged.loc[merged['state'].isnull(), 'state/region'].unique()

# 修复缩写缺失
merged.loc[merged['state/region'] == 'PR', 'state'] = 'Puerto Rico'
merged.loc[merged['state/region'] == 'USA', 'state'] = 'United States'
merged.isnull().any()

# 合并面积数据
final = pd.merge(merged, areas, on='state', how='left')

# 寻找缺失
# final.isnull().any()

# 查看面积缺失地区
final['state'][final['area (sq. mi)'].isnull()].unique()

# 删除缺失
final.dropna(inplace=True)
final.head()

# 2000 年的各州人口以及总人口数据
data2010 = final.query("year == 2010 & ages == 'total'")
data2010.head()

# 计算人口密度并按序排列
data2010.set_index('state', inplace=True)
density = data2010['population'] / data2010['area (sq. mi)']
density.sort_values(ascending=False, inplace=True)
density.head()

# 人口密度最低的几个州的数据
density.tail()
