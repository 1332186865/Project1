#  Copyright (c) 2022. Generated by Gu.
# 实现有序集合类OrderSet(),能实现两个集合的交集&,并集|, 补集-,对称补集^, ==, !=等操作(写集合相同)
# 要求:集合内部用list存储
class OrderSet:
    def __init__(self, iterable):
        self.data = [x for x in iterable]

    def __and__(self, other):
        return OrderSet([item for item in self.data if item in other.data])

    def __or__(self, other):
        return OrderSet([item for item in self.data if item not in other.data]
                        + [item for item in other.data if item not in self.data]
                        + [item for item in self.data if item in other.data])

    def __xor__(self, other):
        return OrderSet([item for item in self.data if item not in other.data]
                        + [item for item in other.data if item not in self.data])

    def __repr__(self):
        return "OrderSet(%s)" % self.data


# 测试用例:
s1 = OrderSet([1, 2, 3, 4])
s2 = OrderSet([3, 4, 5])
print(s1 & s2)  # OrderSet([3,4])
print(s1 | s2)  # orderSet([1,2,3,4,5])
print(s1 ^ s2)  # OrderSet([1,2,5])
if OrderSet([1, 2, 3]) != OrderSet([1, 2, 3, 4]):
    print("不相同")
