#  Copyright (c) 2022. Generated by Gu.
#  -*- coding=utf-8 -*-
# def zero_to_end(target: list) -> list:
#     # 将传入列表的非零元素复制到新列表中 [2,0,2,0] -> [2,2]
#     new_list = [item for item in target if item]
#     # 根据非零元素的数量在新列表里添加零元素 [2,2,0,0] -> [2,2,0,0]
#     new_list += [0] * target.count(0)
#     target[:] = new_list
#     return new_list

def zero_to_end(target: list):
    """
    将0移到右边
    :param target: 列表
    :return: 排序后的列表
    """
    for item in target:
        if not item:
            target.remove(item)
            target.append(0)


def merge(target: list):
    """
    合并
    :param target: 列表
    :return: 合并后的列表
    """
    zero_to_end(target)
    for i in range(len(target) - 1):
        if target[i] == target[i + 1]:
            target[i] += target[i + 1]
            target[i + 1] = 0
    zero_to_end(target)


def display(matrix: list):
    """
    输出
    :param matrix:矩阵
    :return:输出
    """
    for i in range(len(matrix)):
        for j in range(len(matrix[i])):
            print(matrix[i][j], end=' ')
        print('\r')


def move_left(matrix: list):
    for i in range(len(matrix)):
        merge(matrix[i])


def move_right(matrix: list):
    for i in range(len(matrix)):
        temp_list = matrix[i][::-1]
        merge(temp_list)
        matrix[i][::-1] = temp_list


def move_up(matrix: list):
    for i in range(len(matrix)):
        temp_list = [j[i] for j in matrix]
        merge(temp_list)
        for j in range(len(matrix)):
            matrix[j][i] = temp_list[j]


def move_down(matrix: list):
    for i in range(len(matrix)):
        temp_list = [j[i] for j in matrix[::-1]]
        merge(temp_list)
        temp_list = temp_list[::-1]
        for j in range(len(matrix) - 1, -1, -1):
            matrix[j][i] = temp_list[j]


def run():
    lst1 = [[4, 0, 2, 2],
            [2, 2, 0, 0],
            [4, 0, 4, 4],
            [4, 0, 0, 16]]
    display(lst1)
    while True:
        a = input("请输入方向:")
        if a == 'u':
            move_up(lst1)
            display(lst1)
        elif a == 'd':
            move_down(lst1)
            display(lst1)
        elif a == 'r':
            move_right(lst1)
            display(lst1)
        elif a == 'l':
            move_left(lst1)
            display(lst1)
        else:
            break


if __name__ == '__main__':
    run()
