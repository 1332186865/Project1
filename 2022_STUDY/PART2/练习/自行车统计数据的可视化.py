#  Copyright (c) 2022. Generated by Gu.
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn

data = pd.read_csv('Fremont_Bridge_Bicycle_Counter.csv',
                   index_col='Date', parse_dates=True)
data.columns = ['Total', 'West', 'East']

# 1.数据可视化

# 原始数据画图
seaborn.set()
data.plot()
plt.ylabel('Hourly Bicycle Count')
plt.show()

# 按周累计
weekly = data.resample('W').sum()
weekly.plot(style=[':', '--', '-'])
plt.ylabel('Weekly bicycle count')
plt.show()

# 计算数据的30日移动均值，并让图形在窗口居中显示（center=True）
daily = data.resample('D').sum()
daily.rolling(30, center=True).mean().plot(style=[':', '--', '-'])
plt.ylabel('mean of 30 days count')
plt.show()

# 高斯分布时间窗口:设置窗口的宽度(选择50天)和窗口内高斯平滑的宽度(选择10天)
daily.rolling(50, center=True,
              win_type='gaussian').sum(std=10) \
    .plot(style=[':', '--', '-'])
plt.show()

# 2. 深入挖掘数据

# 观察单日内的小时均值流量
by_time = data.groupby(data.index.time).mean()
hourly_ticks = 4 * 60 * 60 * np.arange(6)
by_time.plot(xticks=hourly_ticks, style=[':', '--', '-'])
plt.show()

# 周内每天的变化
by_weekday = data.groupby(data.index.dayofweek).mean()
by_weekday.index = ['Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun']
by_weekday.plot(style=[':', '--', '-'])
plt.show()

# 用一个复合 groupby 来观察一周内工作日与双休日每小时的数据。
# 用一个标签表示双休日和工作日的不同小时
weekend = np.where(data.index.weekday < 5, 'Weekday', 'Weekend')
by_time = data.groupby([weekend, data.index.time]).mean()
fig, ax = plt.subplots(1, 2, figsize=(14, 5))
by_time.loc['Weekday'].plot(ax=ax[0], title='Weekdays',
                            xticks=hourly_ticks, style=[':', '--', '-'])
by_time.loc['Weekend'].plot(ax=ax[1], title='Weekends',
                            xticks=hourly_ticks, style=[':', '--', '-'])
plt.show()

# 工作日的自行车流量呈双峰通勤模式（bimodal commute pattern），
# 而到了周末就变成了单峰娱乐模式（unimodal recreational pattern）。
