#  Copyright (c) 2022. Generated by Gu.
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

births = pd.read_csv(r'D:\Python\PycharmProjects\Project1\jupyter\Pandas\data\births.csv')
births['decade'] = births['year'] // 10 * 10
sns.set()
births.pivot_table('births', index='year', columns='gender', aggfunc='sum').plot()
plt.ylabel('total birth per year')
plt.show()

# sigma 消除法（sigma-clipping，按照正态分布标准差划定范围，SciPy 中
# 默认是四个标准差）操作来实现
quartiles = np.percentile(births['births'], [25, 50, 75])
mu = quartiles[1]
# 样本均值的稳定性估计(robust estimate), 其中0.74是指标准正态分布的分位数间距。
# 按照正态分布标准差划定范围；
# 计算方式：取下四分之一分位数、中位数和上四分之一分位数，即25%、50%和75%；
# 样本均值稳定性估计 = 0.74 * (上1/4分位数 - 下1/4分位数)
# 其中0.74是指标准正态分布的分位数间距。
sig = 0.74 * (quartiles[2] - quartiles[0])
births = births.query('(births > @mu - 5 * @sig) & (births < @mu + 5 * @sig)')

# 创建日期索引
births['day'] = births['day'].astype('int')
births.index = pd.to_datetime(10000 * births.year +
                              100 * births.month +
                              births.day, format='%Y%m%d')
births['dayofweek'] = births.index.dayofweek

# 不同年代不同星期的日均出生数据

births.pivot_table('births', index='dayofweek',
                   columns='decade', aggfunc='mean').plot()
plt.gca().set_xticklabels(['Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun'])
plt.ylabel('mean births by day')
plt.show()

# 画出各个年份平均每天的出生人数，可以按照月和日两个维度分别对 数据进行分组：
births_by_date = births.pivot_table('births', [births.index.month, births.index.day])
births_by_date.head()

# 虚构一个年份，与月和日组合成新索引
births_by_date.index = [pd.datetime(2012, month, day)
                        for (month, day) in births_by_date.index]
births_by_date.head()

fig, ax = plt.subplots(figsize=(12, 4))
births_by_date.plot(ax=ax)
plt.show()
