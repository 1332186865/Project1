#  Copyright (c) 2022. Generated by Gu.
#  -*- coding=utf-8 -*-
import os
import sys
from socket import *

# 服务器地址
ADDR = ('0.0.0.0', 8888)
user = {}


def do_login(s, name, addr):
    """进入聊天室"""
    if name in user or "管理员" in name:
        s.sendto('\n该用户已存在'.encode(), addr)
        return
    s.sendto(b'OK', addr)
    # 通知其他人
    msg = '\n欢迎%s进入聊天室' % name
    for i in user:
        s.sendto(msg.encode(), user[i])

    #  加入用户
    user[name] = addr


def do_chat(s, name, text):
    """聊天"""
    msg = '\n%s : %s' % (name, text)
    for i in user:
        if i != name:
            s.sendto(msg.encode(), user[i])


def do_quit(s, name):
    """退出客户端"""
    msg = '\n%s退出了聊天室' % name
    for i in user:
        if i != name:
            s.sendto(msg.encode(), user[i])
        else:
            s.sendto(b'EXIT', user[i])
    # 将用户退出
    del user[name]


def do_requests(s: socket):
    """接收客户端请求"""
    while True:
        data, addr = s.recvfrom(1024)
        msg = data.decode().split(' ')
        # 区分请求类型
        if msg[0] == 'L':
            do_login(s, msg[1], addr)
        elif msg[0] == 'C':
            text = ' '.join(msg[2:])
            do_chat(s, msg[1], text)
        elif msg[0] == 'Q':
            if msg[1] not in user:
                s.sendto(b'EXIT', addr)
                continue
            do_quit(s, msg[1])


def main():
    """创建网络连接"""
    # 套接字
    s = socket(AF_INET, SOCK_DGRAM)
    s.bind(ADDR)

    pid = os.fork()
    if pid < 0:
        return
    elif pid == 0:
        # 发送管理员消息
        while True:
            msg = input('管理员消息:')
            if msg == 'q':
                sys.exit()
            msg = "C 管理员消息" + msg
            s.sendto(msg.encode(), ADDR)
    else:
        # 请求处理
        do_requests(s)  # 处理客户端请求


if __name__ == '__main__':
    main()
