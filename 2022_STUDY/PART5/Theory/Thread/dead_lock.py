#  Copyright (c) 2023. Generated by Gu.
#  -*- coding=utf-8 -*-
import threading
import time


class Account:
    """交易类"""

    def __init__(self, _id, balance, lock: threading.Lock):
        self.id = _id
        self.balance = balance
        self.lock = lock

    def withdraw(self, amount):
        """取钱"""
        self.balance -= amount

    def deposit(self, amount):
        """存钱"""
        self.balance += amount

    def get_balance(self):
        """查看余额"""
        return self.balance


def transfer(from_: Account, to: Account, amount: int):
    """转账"""
    if from_.lock.acquire():
        from_.withdraw(amount)
        time.sleep(.5)
        if to.lock.acquire():
            to.deposit(amount)
            to.lock.release()
        from_.lock.release()
    print("Finish!")


if __name__ == '__main__':
    Abby = Account('Abby', 5000, threading.Lock())
    Levi = Account('Levi', 3000, threading.Lock())

    t1 = threading.Thread(target=transfer, args=(Abby, Levi, 200))
    t2 = threading.Thread(target=transfer, args=(Levi, Abby, 1000))
    t1.start()
    time.sleep(1)
    t2.start()
    t1.join()
    t2.join()

    print("Abby:", Abby.get_balance())
    print("Levi:", Levi.get_balance())
