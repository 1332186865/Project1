#  Copyright (c) 2023. Generated by Gu.
#  -*- coding=utf-8 -*-
import time
from threading import Thread, RLock

num = 0
lock = RLock()  # 一个线程内对锁重复加锁


class MyThread(Thread):
    def fun1(self):
        global num
        with lock:
            num -= 1

    def fun2(self):
        global num
        time.sleep(1)
        if lock.acquire():
            num += 1
            print(self.name, "Set num = ", num)
            self.fun1()
            lock.release()

    def run(self) -> None:
        self.fun2()


if __name__ == '__main__':
    for i in range(10):
        t = MyThread()
        t.start()
        t.join()
