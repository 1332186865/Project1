#  Copyright (c) 2023. Generated by Gu.
#  -*- coding=utf-8 -*-
from threading import Thread
from time import sleep, ctime


class MyThread(Thread):
    def __init__(self, target=None, args=(), kwargs=None, name='Default'):
        super().__init__()
        if kwargs is None:
            kwargs = {}
        self.target = target
        self.args = args
        self.kwargs = kwargs
        self.name = name

    def run(self) -> None:
        self.target(*self.args, **self.kwargs)


# ******************************************
# 通过完成上面的MyThread类让整个程序可以正常执行
# 当调用 start 时 player 作为一个线程功能函数运行
# 注意，函数的名称和参数并不确定，player 只是测试函数
# ******************************************


def player(sec, song):
    for i in range(2):
        print("Playing %s:%s" % (song, ctime()))
        sleep(sec)


def main():
    t1 = MyThread(target=player, args=(3,), kwargs={'song': '凉凉'}, name='Happy')
    t1.start()
    sleep(1)
    t2 = MyThread(target=player, args=(3,), kwargs={'song': '三月雨'}, name='NewYear')
    t2.start()
    t1.join()
    t2.join()


if __name__ == '__main__':
    main()
