#  Copyright (c) 2023. Generated by Gu.
#  -*- coding=utf-8 -*-
import asyncio
import time

now = lambda: time.time()


async def do_work(x):
    print("waiting:", x)
    await asyncio.sleep(x)
    return "Done after %s s" % x


start = now()
cor1 = do_work(1)
cor2 = do_work(2)
cor3 = do_work(3)


# 将协程对象生成一个可轮询操作的对象列表
async def main():
    tasks = [
            asyncio.ensure_future(cor1),
            asyncio.ensure_future(cor2),
            asyncio.ensure_future(cor3),
            ]
    await asyncio.gather(*tasks)


# 得到轮询对象
asyncio.run(main())
print("Time:", now() - start)
