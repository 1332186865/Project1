#  Copyright (c) 2022. Generated by Gu.
#  -*- coding=utf-8 -*-
class MyRangeIterator:
    """迭代器对象"""

    def __init__(self, count):
        self.start = -1
        self.stop = count

    def __next__(self):
        if self.start < self.stop - 1:
            self.start += 1
            return self.start
        else:
            raise StopIteration


class MyRange:
    """可迭代对象"""

    def __init__(self, stop):
        self.stop = stop

    def __iter__(self):
        # return MyRangeIterator(self.stop)
        # 使用yield自动生成迭代器对象
        # 1.
        # for item in range(self.stop):
        #     yield item
        # 2.
        start = 0
        while start < self.stop:
            yield start
            start += 1


if __name__ == '__main__':
    iterator = MyRange(5)
    for i in iterator:
        print(i)
