#  Copyright (c) 2022. Generated by Gu.
#  -*- coding=utf-8 -*-
class GraphicManager:
    """
        图形管理器
    """

    def __init__(self):
        # 记录所有图形
        self.__graphics = []

    def add_graphic(self, g):
        try:
            if isinstance(g, Graphic):
                self.__graphics.append(g)
            else:
                raise ValueError('不属于图形!')
        except ValueError as err:
            print(err, '请检查输入!')

    def get_total_area(self):
        total_area = 0
        for item in self.__graphics:
            total_area += item.get_area()
        return total_area


class Graphic:
    """
        图形  (体现多态)
    """

    def get_area(self):
        raise NotImplementedError


class Circle(Graphic):
    """
        圆形
    """

    def __init__(self, radius):
        self.radius = radius

    def get_area(self):
        return self.radius ** 2 * 3.14


class Rectangle(Graphic):
    """
        矩形
    """

    def __init__(self, length, width):
        self.length = length
        self.width = width

    def get_area(self):
        return self.length * self.width


if __name__ == '__main__':
    manager = GraphicManager()
    manager.add_graphic('ok')
    manager.add_graphic(Rectangle(2, 3))
    manager.add_graphic(Circle(4))
    print(manager.get_total_area())
