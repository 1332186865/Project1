#  Copyright (c) 2022. Generated by Gu.
#  -*- coding=utf-8 -*-
class Skill:
    def __init__(self):
        pass


class SkillIterator:
    """
        技能迭代器
    """

    def __init__(self, target):
        self.target = target
        self.index = 0

    def __next__(self):
        # 若索引越界则抛出异常
        if self.index > len(self.target) - 1:
            raise StopIteration
        item = self.target[self.index]
        self.index += 1
        return item


class SkillManager:
    """
        可迭代对象
    """

    def __init__(self, skills):
        self.skills = skills

    def __iter__(self):
        return SkillIterator(self.skills)


if __name__ == '__main__':
    manager = SkillManager([Skill(), Skill(), Skill()])
    iterator = manager.__iter__()
    while True:
        try:
            item = iterator.__next__()
            print(item)
        except StopIteration:
            break
