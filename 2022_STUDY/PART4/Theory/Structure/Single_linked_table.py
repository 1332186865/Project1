#  Copyright (c) 2022. Generated by Gu.
#  -*- coding=utf-8 -*-
"""
    单链表
"""


class Node:
    # 结点类
    def __init__(self, value, next_item=None):
        self.value = value
        self.next = next_item


class LinkList:
    def __init__(self):
        self.head = None

    def create_list(self, lst: list):
        self.head = Node(None)
        p = self.head
        for i in lst:
            p.next = Node(i)
            p = p.next

    def display(self):
        p = self.head.next
        while p is not None:
            print(p.value, end=' ')
            p = p.next
        print()

    def append(self, node):
        """尾插法"""
        p = self.head
        while p.next is not None:
            p = p.next
        p.next = Node(node)

    def __len__(self):
        num = 0
        p = self.head
        while p.next is not None:
            num += 1
            p = p.next
        return num

    def is_empty(self):
        if len(self) == 0:
            return True
        return False

    def clear(self):
        self.head.next = None

    def __getitem__(self, item):
        p = self.head.next
        i = 0
        while i < item and p is not None:
            i += 1
            p = p.next
        if p is None:
            raise IndexError('List index out of range')
        return p.value

    def insert(self, index, value):
        """插入"""
        if index < 0 or index > len(self):
            raise IndexError('List index out of range')
        p = self.head
        i = 0
        while i < index:
            i += 0
            p = p.next
        node = Node(value)
        node.next = p.next
        p.next = node

    def delete(self, value):
        """删除值"""
        p = self.head
        while p.next is not None:
            if p.next.value == value:
                p.next = p.next.next
                break
            p = p.next
        else:
            raise ValueError('%d not in list' % value)


if __name__ == '__main__':
    lst1 = LinkList()
    L = [1, 2, 3, 4, 5]
    lst1.create_list(L)
    lst1.display()
    lst1.append(7)
    lst1.display()
    lst1.append(8)
    lst1.display()
    print(len(lst1))
    print(lst1[0])
    print(lst1.is_empty())
    # lst1.clear()
    # print(lst1.is_empty())
    lst1.delete(10)
