#  Copyright (c) 2022. Generated by Gu.
#  -*- coding=utf-8 -*-
class StackError(Exception):
    pass


class Node:
    def __init__(self, value, next=None):
        self.value = value
        self.next = next


class LStack:
    def __init__(self):
        self._top = None

    def is_empty(self):
        return self._top is None

    def push(self, value):
        self._top = Node(value, self._top)

    def pop(self):
        assert self._top, StackError('stack is empty!')
        p = self._top
        self._top = p.next
        return p.value

    def display(self):
        """输出所有"""
        while not self.is_empty():
            print(self.pop(), end=' ')

    def get_top(self):
        assert self._top, StackError('stack is empty!')
        return self._top.value

    def clear(self):
        """清空栈"""
        self._top = None


if __name__ == '__main__':
    st = LStack()
    st.push(10)
    st.push(30)
    print(st.get_top())
    st.display()
    # st.pop()
