#  Copyright (c) 2022. Generated by Gu.
from math import floor


def get_next_line(ls):
    next_line = [1]
    # 计算中间依赖上一层的数
    for i in range(len(ls) - 1):
        next_line.append(ls[i] + ls[i + 1])
    # 在最后加入一个1
    next_line.append(1)
    return next_line


def center_print(ls):
    lst = []
    for i in range(len(ls), 0, -1):
        lst.append(floor(i * 3 / 2))
    # lst.reverse()
    return lst


def get_yanghui_list(n):
    ls = [1]
    yhlist = []
    for _ in range(n):
        yhlist.append(ls)
        ls = get_next_line(ls)
    return yhlist


def main():
    ls = get_yanghui_list(6)
    lst = center_print(ls)
    for i in range(len(ls)):
        print(' ' * lst[i], end='')
        print(ls[i])


if __name__ == '__main__':
    main()
