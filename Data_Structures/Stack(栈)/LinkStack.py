#  Copyright (c) 2022. Generated by Gu.
#  -*- coding=utf-8 -*-

class LinkNode:
    """单链表结点类"""

    def __init__(self, data=None):
        self.data = data
        self.next = None


class LinkStack:
    """链栈类"""

    def __init__(self):
        self.head = LinkNode()
        self.head.next = None

    def empty(self):
        """判断栈是否为空"""
        return self.head.next is None

    def push(self, e):
        """元素e进栈"""
        p = LinkNode(e)
        p.next = self.head.next
        self.head.next = p

    def pop(self):
        """元素出栈"""
        assert self.head.next is not None
        p = self.head.next
        self.head.next = p.next
        return p.data

    def get_top(self):
        """取栈顶元素"""
        assert self.head.next is not None
        return self.head.next.data


if __name__ == '__main__':
    st = LinkStack()
    st.push(1)
    st.push(2)
    st.push(3)
    st.push(4)
    print("出栈顺序:", end=' ')
    while not st.empty():
        print(st.pop(), end=' ')
    print()
