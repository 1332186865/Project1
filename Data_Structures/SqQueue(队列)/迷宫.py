#  Copyright (c) 2022. Generated by Gu.
# P124 懒得写了
from collections import deque

mg = [[1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 1, 1, 1, 1, 1, 1],
      [1, 0, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 1, 1, 1, 1],
      [1, 0, 0, 1, 0, 1, 1, 1],
      [1, 1, 0, 0, 0, 0, 0, 1],
      [1, 1, 0, 1, 1, 1, 0, 1],
      [1, 1, 1, 1, 1, 1, 1, 1]]


class Box:
    """方块类"""

    def __init__(self, i1, j1):
        self.i = i1  # 行号
        self.j = j1  # 列号
        self.pre = None  # di是可走相邻方位的方位号


def mgpath(xi, yi, xe, ye):
    """(xi, yi)->(xe, ye)的迷宫路径"""
    global mg  # 迷宫数组
    dx = [-1, 0, 1, 0]  # x方向偏移量
    dy = [0, 1, 0, -1]  # y方向偏移量
    qu = deque()
    b = Box(xi, yi)
    qu.appendleft(b)
    mg[xi][yi] = -1
    while len(qu) != 0:
        b = qu.pop()
        if b.i == xe and b.j == ye:
            p = b
            path = []
            while p is not None:
                path.append("[" + str(p.i) + "," + str(p.j) + "]")
                p = p.pre
            for i in range(len(path) - 1, -1, -1):
                print(path[i], end=' ')
            return True
        for di in range(4):
            i, j = b.i + dx[di], b.j + dy[di]
            if mg[i][j] == 0:
                b1 = Box(i, j)
                b1.pre = b
                qu.appendleft(b1)
                mg[i][j] = -1
    return False


if __name__ == '__main__':
    xi, yi = 1, 1
    xe, ye = 6, 6
    print('迷宫的路径为:', end=' ')
    if not mgpath(xi, yi, xe, ye):
        print('迷宫不存在路径')
