#  Copyright (c) 2023. Generated by Gu.
#  -*- coding=utf-8 -*-
import re

import requests
from bs4 import BeautifulSoup


class Weather:
    """天气类"""

    def __init__(self):
        self.url = "http://www.weather.com.cn/weather/101111101.shtml"
        self.response = None
        self.show_weather = True  # 显示天气

    def get_response(self):
        """请求数据"""
        headers = {
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36"}
        # 请求数据。使用 get 方法请求数据
        self.response = requests.get(self.url, headers=headers)

    def parse_data(self):
        """解析数据

        Returns:
                list: 包含天气情况字典的列表
        """
        soup = BeautifulSoup(self.response.text, "lxml")  # 由于是通过 html 格式存储的，所以用 “html.parser” 进行解析
        data_table = soup.find('ul', class_="t clearfix").find_all("li")  # 找到包裹表内容的 ul 标签，找到里面所有的 li 标签
        weather_list = []  # 构造空列表以存储数据
        for li in data_table[1:2]:  # 循环获取每行的数据（li 标签）
            th_list = li.find_all('p')  # 获取每行的每个数据 （li 标签下的 div 标签）
            weather = {
                    'date': li.find('h1').get_text(),
                    'weather': ''.join(th_list[0].get_text().split()),  # 获取第一个 div 标签中的内容，命名为 “date”
                    'temperature': ''.join(th_list[1].get_text().split()),
                    'wind': ''.join(th_list[2].get_text().split())
                    }  # 每行数据存储在字典中
            weather_list.append(weather)  # 所有行的数据存入一个列表中
        return weather_list

    def crawler(self):
        """定义爬取函数

        Returns:
            dict: 明日天气字典
        """
        self.get_response()
        self.response.encoding = 'utf-8'
        results = self.parse_data()  # 解析数据
        return results[0]

    def main(self):
        res = self.crawler()
        if '（明天）' in res['date']:
            res['date'] = re.sub('（明天）', '', res['date'])
        if self.show_weather:
            text = f"{res['date']}: {res['weather']}, 温度 {res['temperature']}"
        else:
            text = f"{res['date']}课程:"
        return text

    @staticmethod
    def display():
        print(Weather().main())


if __name__ == '__main__':
    Weather().display()
