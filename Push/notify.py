#  Copyright (c) 2023. Generated by Gu.
#  -*- coding=utf-8 -*-
import requests


class PushQQ:
    """推送类"""
    def __init__(self, is_test: bool, content: str = ''):
        """

        Args:
            is_test: 是否测试
            content: 要发送的内容
        """
        self.is_test = is_test  # 测试模式
        self.is_group = True
        self.is_group_private = False
        self.content = content
        # 个人
        self.user_qq = 'http://127.0.0.1:8000/send_private_msg'
        self.user_id = 'user_id=1332186865'
        # 群
        self.group_qq = 'http://127.0.0.1:8000/send_group_msg'
        self.group_id_class = 'group_id=547162545'  # 班群
        self.group_id_private = 'group_id=772163828'  # 灌水

        self.push_config = {'GOBOT_TOKEN': ''  # go-cqhttp 的 access_token
                            }
        self.config()

    def config(self):
        """发送参数(发送地址)"""
        if self.is_test:
            self.content += '\n···测试···\n'
            self.push_config['GOBOT_URL'] = self.group_qq
            self.push_config['GOBOT_QQ'] = self.group_id_private
        else:
            if self.is_group:
                self.push_config['GOBOT_URL'] = self.group_qq
                if self.is_group_private:
                    self.push_config['GOBOT_QQ'] = self.group_id_private
                else:
                    self.push_config['GOBOT_QQ'] = self.group_id_class
            else:
                self.push_config['GOBOT_URL'] = self.user_qq
                self.push_config['GOBOT_QQ'] = self.user_id
        """
        推送到个人QQ：http://127.0.0.1/send_private_msg; 群：http://127.0.0.1/send_group_msg
        GOBOT_URL 设置 /send_private_msg 时填入 user_id=1332186865; /send_group_msg 时填入 group_id=772163828
        """

    def console(self) -> None:
        """使用 控制台 推送消息。"""
        print(f"{self.content}")

    def go_cqhttp(self) -> None:
        """使用 go_cqhttp 推送消息。"""
        print("go-cqhttp 服务启动")
        url = f'{self.push_config.get("GOBOT_URL")}?{self.push_config.get("GOBOT_QQ")}&message={self.content}'
        response = requests.get(url).json()
        if response["status"] == "ok":
            print("go-cqhttp 推送成功！")
        else:
            print(response)
            print("go-cqhttp 推送失败！")

    @staticmethod
    def one() -> str:
        """获取一条一言"""
        url = "https://v1.hitokoto.cn/"  # 一言（随机句子）
        res = requests.get(url).json()
        return res["hitokoto"] + "    ----" + res["from"]

    def send(self) -> None:
        """发送"""
        if self.is_test:
            self.content += self.one()
        self.console()
        self.go_cqhttp()


if __name__ == "__main__":
    PushQQ(True).send()
