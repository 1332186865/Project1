#  Copyright (c) 2023. Generated by Gu.
#  -*- coding=utf-8 -*-
import os
import re

from bs4 import BeautifulSoup


class Finder:
    def __init__(self):
        self.data_folder = ""
        self.result_folder = ""
        self.result_file = "result.tsv"
        self.all_data = []
        self.web_data = ''
        self.art_path = ''
        self.owner = False  # 0 修改
        self.wrong_article = []
        self.code = ''

    def is_owner(self):
        if self.owner:
            self.data_folder = "./data_article"
            self.result_folder = "./result_article"
            self.code = 'D'
        else:
            self.data_folder = "./Postharvest Biology and Technology"  # 1 修改
            self.result_folder = "./Postharvest Biology and Technology_297"
            self.code = 'B'  # 2 修改

    @staticmethod
    def remove_garbled_characters(text):
        text = re.sub(r"&amp;nbsp;×&amp;nbsp;", " x ", text)
        text = re.sub(r"&nbsp;", " ", text)
        # text = re.sub(r'<sup.*?</sup>', " ", text)
        text = re.sub(r'=E2=88=92 1', "-1", text)
        text = re.sub(r'=E2=80=99', "'", text)
        text = re.sub(r'=E2=80=93', "-", text)
        text = re.sub(r'=C3=A1', "a", text)
        text = re.sub(r'=..=..=..', "", text)
        text = re.sub(r'=..=..', "", text)
        text = re.sub(r'=\n', "", text)
        pattern = re.compile(r'[^\x00-\x7F]+')  # 定义正则表达式，用于匹配乱码字符
        result = re.sub(pattern, ' ', text, re.S)  # 使用空字符串替换乱码字符
        return result

    @staticmethod
    def temp_save(text):
        with open("./1.mhtml", "w", encoding="utf-8") as f:
            f.write(text)

    def method(self):
        self.is_owner()
        # os.remove(f"{self.result_folder}/{self.result_file}")
        html_files = [f for f in os.listdir(self.data_folder) if f.endswith('.mhtml')]
        for html_file in html_files:
            with open(f"{self.data_folder}/{html_file}", "r", encoding='utf-8') as f:
                orig_data = self.remove_garbled_characters(f.read())
                self.temp_save(orig_data)
                print("File：", html_file, end='\t')
                data = BeautifulSoup(orig_data, 'lxml')
                self.web_data = ''
                temp = data.find("div", '3D"text-xs"').text
                current_year = re.search(r"2\d\d\d", temp).group()[2:]
                self.art_path = f"{self.code}{current_year}-{html_file[:-6]}"

                try:
                    # intro = data.find('section', id='3D"s0005"')  # 3 需要修改Introduction的标签 顾

                    # intro = data.find('section', id='3D"sec0001"')  # 需要修改Introduction的标签 东阳1
                    # if intro is None:
                    #     intro = data.find('section', id='3D"sec1"')  # 需要修改Introduction的标签 东阳2
                    # if intro is None:
                    #     intro = data.find('section', id='3D"sec0002"')  # 需要修改Introduction的标签 东阳3

                    intro = data.find('section', id='3D"sec0005"')  # 需要修改Introduction的标签 垚丹 李言兮
                    self.web_data += "Introduction" + "\n"
                    if intro.div:
                        for item in intro.div.find_all("p"):
                            a = item.text
                            self.web_data += a + "\n"
                    else:
                        for item in intro.find_all("p"):
                            a = item.text
                            self.web_data += a + "\n"
                    # author = data.find("div", id='3D"author-group"')
                    # author_1 = author.find("a", class_='3D"anchor')
                    # names = ''
                    # for item in author.find_all("button", class_='3D"button-link'):
                    #     name = item.text
                    #     names += name + ','
                    # if author_1:
                    #     names += author_1.text

                    names = ''
                    author_group = []
                    author = data.find("div", id='3D"author-group"')
                    for item in author:
                        if item.name == "button" or item.name == "a":
                            author_group += item
                    for item in author_group:
                        name = item.text
                        names += name + ','

                    institute = data.find("dl", class_='3D"affiliation"').dd.text
                    institute_f = institute.split(", ")[:-1]
                    country = institute.split(", ")[-1]
                    self.all_data.append([self.art_path, names, ','.join(institute_f), country])
                    print(self.art_path)

                except AttributeError as e:
                    print(e)
                    self.all_data.append([self.art_path, "", "", ""])
                    self.wrong_article.append(html_file[:-6])
                    print("笑死，没点 Show more 吧")
                    print("还是手太快Introduction没加载出来")
                    print("小概率文章本来就有问题")
                finally:
                    article_path = f'{self.result_folder}/{self.art_path}.txt'
                    with open(article_path, 'w', encoding='utf-8') as file:
                        file.write(self.web_data)
                    print("Done!")
        with open(f'{self.result_folder}/{self.result_file}', 'a', encoding='utf-8') as f:
            for item in self.all_data:
                f.write(item[0] + '\t' + item[1] + '\t' + item[2] + '\t' + item[3] + '\n')
        if self.wrong_article:
            print("存在问题的文件:", self.wrong_article)
            print("笑死，没点 Show more 吧")
            print("还是手太快Introduction没加载出来")
            print("小概率文章本来就有问题")
        else:
            print("No problem. Great!")
        print("All Done!")


if __name__ == '__main__':
    Finder().method()
